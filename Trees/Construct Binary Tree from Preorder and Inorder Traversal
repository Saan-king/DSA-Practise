Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder
traversal of the same tree, construct and return the binary tree.

Example 1:
Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]
Output: [3,9,20,null,null,15,7]

Example 2:
Input: preorder = [-1], inorder = [-1]
Output: [-1]

---------------------------

Java Solution:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
       return helper(0,0,inorder.length-1,preorder,inorder);
    }

    public TreeNode helper(int preStart,int inStart,int inEnd,int[] preorder,int []inorder){
        if(preStart>preorder.length-1 || inStart>inEnd) return null;

        TreeNode root=new TreeNode(preorder[preStart]);

        int inIndex=0;
        for(int i=inStart;i<=inEnd;i++)
        {
            if(inorder[i]==root.val)
                inIndex=i;
        }

        root.left=helper(preStart+1,inStart,inIndex-1,preorder,inorder);
        root.right=helper(preStart+inIndex-inStart+1,inIndex+1,inEnd,preorder,inorder);
           return root;
    }
 
}
