You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

class Solution {
    public int climbStairs(int n) {
        if(n<=1) return n;
        
       int a[]=new int[n+1];
       a[0]=1;
       a[1]=1;
       for(int i=2;i<=n;i++)
        a[i]=a[i-1]+a[i-2];

    return a[n];
    }
}

/*
4
1+1+1+1
1+1+2
1+2+1
2+1+1
2+2
*/
