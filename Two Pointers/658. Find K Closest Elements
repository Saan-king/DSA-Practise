Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b

Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]

Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]

-----------------
Java:

Binary search+Two pointers

class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int l=0,r=arr.length-1;

        while(r-l>=k)
        { //instead of looking for x, look for k sized window
            if(arr[r]-x>=x-arr[l])   //checking if right half of window is greater than target value, if yes reduce r--
                r--;
            else   //checking if left half of window is greater than the closest target element, if yes l++
                l++;
        }
        List<Integer> res=new ArrayList<>();
        for(int i=l;i<=r;i++) res.add(arr[i]);  //create a list and store the values of the window size from l to r
        return res;
    }
}
