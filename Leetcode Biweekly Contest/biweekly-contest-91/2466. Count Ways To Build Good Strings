A good string is a string constructed by the above process having a length between low and high (inclusive).

Return the number of different good strings that can be constructed satisfying these properties. Since the answer can be large, return it modulo 109 + 7.


nput: low = 3, high = 3, zero = 1, one = 1
Output: 8
Explanation: 
One possible valid good string is "011". 
It can be constructed as follows: "" -> "0" -> "01" -> "011". 
All binary strings from "000" to "111" are good strings in this example.

Constraints:

1 <= low <= high <= 105
1 <= zero, one <= low


class Solution {
    public int countGoodStrings(int low, int high, int zero, int one) {
          final int mod=1000000007;
      long[] dp=new long[100001];
      dp[0]=1;
      for(int i=1;i<=100000;i++){
        if(i-zero>=0)
          dp[i]+=dp[i-zero];
        if(i-one>=0)
          dp[i]+=dp[i-one];
        dp[i]%=mod;
      }
      long ans=0;
      for(int i=low;i<=high;i++)
        ans+=dp[i];
      return (int)(ans%mod);
    } 
}
